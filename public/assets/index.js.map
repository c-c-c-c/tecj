{"version":3,"sources":["../../src/script/index.js"],"names":["animateInWindow","console","log","el","document","getElementById","className","window","onload","setTimeout"],"mappingseAAT,GAA4B;;AAE3B;AACA;AACC;AACA;;AAED;AACAC,SAAQC,GAAR,CAAY,MAAZ;AACA,KAAIC,KAAKC,SAASC,cAAT,CAAwB,gBAAxB,CAAT;AACAF,IAAGG,SAAH,IAAgB,cAAhB;AACA;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,OAAOC,MAAP,GAAiB,YAAK;AACtB;AACCP,SAAQC,GAAR,CAAY,KAAZ;AACA;AACA;AACAO,YAAY,YAAI;AACfR,UAAQC,GAAR,CAAY,SAAZ;AACAF;AACA,EAHD,EAGE,IAHF;;AAMAC,SAAQC,GAAR,CAAY,WAAZ;AACA;AACA;AACA;AACA,CAfD","file":"index.js","sourcesContent":["// let howManySpinners = 200;\n// let scene = new THREE.Scene();\n// let box;\n// let controls;\n// let renderer = [];\n// let camera;\n// let model = [];\n// //let model = {};\n// let model2 = {};\n// let model3 = {};\n// let rotate_speed = 0.05;\n// let r_radian = 0;\n// let c_radian = 0;\n// let r_radian_speed =0.01;\n// let c_radian_speed =0.007;\n// let count = 0;\n//\n// let geometry;\n// let material;\n// let scroll_px = 0;\n// let delta_scroll_px = 0;\n// let sum_delta_scroll_px = 0.05;\n// const $window = $(window);\n\n\n\n/////////////////////\n//スクロールアクション//\n////////////////////\n// function countScroll () {\n// \t// スクロールしたら発動\n// \t$window.scroll(function() {\n// \t\tlet before_scroll_px = scroll_px;\n// \t\t// スクロール量を変数に格納\n// \t\tscroll_px = $(this).scrollTop();\n// \t\tdelta_scroll_px = (scroll_px) - (before_scroll_px);\n// \t\tsum_delta_scroll_px +=delta_scroll_px;\n//\n// \t\t//specialsをとめる\n// \t\tif ( delta_scroll_px < 0 ) {\n// \t\t\t$(\"#clover_main\").css(\"animation-duration\", \"0s\");\n// \t\t\t$(\"#husha_main\").css(\"animation-duration\", \"0s\");\n// \t\t\t$(\"#kanransha_main\").css(\"animation-duration\", \"0s\");\n//\n// \t\t}\n//\n// \t});\n// }\n////////////////\n//ホバー時の挙動//\n///////////////\n// function addHoverImgChange () {\n// \t$( '.item_box' ).hover((e)=>{\n//\n// \t\t\t$(e.currentTarget).find(\"img\").each((i, ev)=>{\n// \t\t\t\tif ($(ev).attr(\"class\") == \"not_spin\"  ){\n// \t\t\t\t\t$(ev).animate({opacity: 0});//\n// \t\t\t\t} else {\n// \t\t\t\t\t$(ev).animate({opacity: 1});\n// \t\t\t\t}\n// \t\t\t});\n//\n// \t},(e)=>{\n//\n// \t\t$(e.currentTarget).find(\"img\").each((i, ev)=>{\n// \t\t\tif ($(ev).attr(\"class\") == \"not_spin\"  ){\n// \t\t\t\t$(ev).animate({opacity:1});\n// \t\t\t} else {\n// \t\t\t\t$(ev).animate({opacity:0});\n// \t\t\t}\n// \t\t});\n// \t});\n// // }\n// function initMovie() {\n//\n// \t// IFrame Player API JavaScript コードの読み込み\n// \tvar tag = document.createElement('script');\n// \ttag.src = \"https://www.YOUTUBE.com/player_api\";\n// \tvar firstScriptTag = document.getElementsByTagName('script')[0];\n// \tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n//\n// }\n//\n// var ytPlayer;\n// function onYouTubePlayerAPIReady() {\n// \tytPlayer = new YT.Player(\n// \t\t'mv',// iframeに差し替えたいdivのID\n// \t\t{\n// \t\t\twidth: '100%',// プレイヤーの高さ\n// \t\t\theight: '100%',// プレイヤーの幅\n// \t\t\tvideoId: 'vpouubMXKlI',//動画のID\n// \t\t\t// イベントの設定\n// \t\t\tevents: {\n// \t\t\t\t'onReady': onPlayerReady, // プレーヤー準備完了後、onPlayerReady関数を実行\n// \t\t\t\t'onStateChange': onPlayerStateChange // プレーヤー状態変更時、onPlayerStateChange関数を実行\n// \t\t\t},\n// \t\t\t// パラメータの設定\n// \t\t\tplayerVars: {\n// \t\t\t\tautoplay: 1, // 自動再生(0:しない,1:する)\n// \t\t\t\tcontrols: 0, // コントロールバー(0:非表示,1:表示,2:動画再生後に表示)\n// \t\t\t\t//listType: playlist, // 再生リストを表示\n// \t\t\t\t//listType: search list, // listパラメータで指定した文字列で検索した動画を再生リストに表示\n// \t\t\t\t//listType: user_uploads, // YouTubeチャンネルを表示\n// \t\t\t\t//list: ***, // listTypeパラメータがplaylistの時、再生リストIDを指定\n// \t\t\t\t//list: ***, // istTypeパラメータがsearch listの時、検索する文字列を指定\n// \t\t\t\t//list: ***, // istTypeパラメータがuser_uploadsの時、YouTubeチャンネルを指定\n// \t\t\t\tloop: 0, // ループ再生(0:しない,1:する)※単一の動画の場合、同じ動画IDをplaylistパラメータの値に設定\n// \t\t\t\t//playlist: ***,***,***, //最初の動画再生後、IDで指定した動画を順番に再生(値は動画ID)\n// \t\t\t\trel: 0, // 再生終了後、関連動画を表示(0:非表示,1:表示)\n// \t\t\t\tshowinfo: 0, // 動画再生前にタイトルを表示(0:非表示,1:表示)\n// \t\t\t\t//start: **, //指定秒数から動画再生\n// \t\t\t\t//end: **, // 指定秒数後、動画を停止\n// \t\t\t\twmode: 'transparent', // プレーヤーを背面に表示する\n// \t\t\t}\n// \t\t}\n// \t);\n// }\n//\n//\n// function onPlayerReady(event) {\n// \t// 動画再生(※自動再生ということ)\n// \tevent.target.playVideo();\n// }\n\n////////////////////\n// SPECIALSの挙動 //\n//////////////////\n\n\nfunction animateInWindow () {\n\n\t// let path = $.bezierCurve(0, 0).addPoint(400, 200).addPoint(0, 370);\n\t// $(\"#animate_window\").animate({\n  //   bezierPath: path\n \t// }, 1, \"easing\");\n\n\t// let el = document.getElementById(\"test_anime\");\n\tconsole.log('last');\n\tlet el = document.getElementById(\"animate_window\");\n\tel.className += \" getin_anime\";\n}\n\n\n//\n//\n// $(document).ready(function() {\n// \tconsole.log(\"foo\");\n// \t$(window).fadeThis({speed: 600, distance: 4});\n// \tsetTimeout( animateInWindow(), 30000);\n// \t\tconsole.log(\"yeah\");\n// \t// $(countScroll());\n// \t// $(addHoverImgChange());\n// \t// initMovie();\n// });\n\n\nwindow.onload =  ()=> {\n// $(document).ready(function() {\n\tconsole.log(\"foo\");\n\t// $(window).fadeThis({speed: 600, distance: 4});\n\t// setTimeout( animateInWindow(),300000);\n\tsetTimeout( ()=>{\n\t\tconsole.log('waiting');\n\t\tanimateInWindow();\n\t},3000);\n\n\n\tconsole.log(\"yeah yeah\");\n\t// $(countScroll());\n\t// $(addHoverImgChange());\n\t// initMovie();\n}\n"]}